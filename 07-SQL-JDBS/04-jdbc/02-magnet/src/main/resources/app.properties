app.url = jdbc:sqlite:magnet.sqlite
app.quantity = 10
app.searchTableEntry = SELECT * FROM main.sqlite_master WHERE main.sqlite_master.tbl_name = 'entry'
app.createTableEntry = CREATE TABLE entry (field integer)
app.addField = INSERT INTO entry(field) VALUES (?)
app.clearTableEntry = DELETE FROM entry
app.entry = entry

app.urlBaseTracker = jdbc:postgresql://localhost:5432/base_tracker
app.urlBasePostgres = jdbc:postgresql://localhost:5432/postgres
app.name = postgres
app.nameDataBase = base_tracker
app.password = admin
app.addItem = INSERT INTO item(name, description, create_date) VALUES (?, ?, ?)
app.searchItemById = SELECT * FROM item WHERE id IN(?)
app.updateItemById = UPDATE item SET name = ?, description = ?, create_date = ? WHERE id = ?
app.removeItemById = DELETE FROM item WHERE id = ?
app.getAllItem = SELECT * FROM item ORDER BY id
app.addCommentById = INSERT INTO comments(name, description, create_date, item_id) VALUES (?, ?, ?, ?)
app.searchCommentByItemId = SELECT * FROM comments WHERE item_id IN(?)
app.searchDataBase = SELECT datname FROM pg_database WHERE datname = 'base_tracker'

app.createDataBase = CREATE DATABASE base_tracker
app.createTableItem = CREATE TABLE item (id SERIAL PRIMARY KEY,\
                                         name VARCHAR(200) NOT NULL,\
                                         description VARCHAR(2000) NOT NULL,\
                                         create_date DATE NOT NULL)
app.createTableComments = CREATE TABLE comments (\
                          id SERIAL PRIMARY KEY,\
                          name VARCHAR(2000) NOT NULL,\
                          description VARCHAR(2000) NOT NULL,\
                          create_date DATE NOT NULL,\
                          item_id INT REFERENCES item(id) ON DELETE CASCADE)
app.item = item
app.dataName = datname
app.tableName = table_name