# jdbc config connect
jdbc.urlBasePostgres = jdbc:postgresql://localhost:5432/postgres
jdbc.urlBaseVacancy = jdbc:postgresql://localhost:5432/base_vacancy
jdbc.userName = postgres
jdbc.password = admin

# sql query
sql.searchDataBase = \
  SELECT datname FROM pg_database WHERE datname = 'base_vacancy'

sql.createDataBase = \
  CREATE DATABASE base_vacancy

sql.searchTableVacancy = \
  SELECT table_name FROM information_schema.tables WHERE table_schema NOT IN ('information_schema','pg_catalog')

sql.createTableVacancy = \
  CREATE TABLE vacancy (\
    id SERIAL PRIMARY KEY, \
    theme VARCHAR(300) UNIQUE NOT NULL, \
    author VARCHAR(50), \
    answers INT NOT NULL,\
    viewers INT NOT NULL,\
    date DATE NOT NULL\
  )

sql.addVacancy = \
  INSERT INTO vacancy (theme, author, answers, viewers, date) VALUES (?, ?, ?, ?, ?) ON CONFLICT DO NOTHING

# other constants
app.nameDataBase = base_vacancy
app.datName = datname
app.vacancy = vacancy
app.tableName = table_name

SELECT vacancy.id, vacancy.theme, vacancy.author, vacancy.date \
  FROM vacancy \
  WHERE vacancy.date IN (SELECT MAX(vacancy.date) FROM vacancy)\
;

#SELECT vacancy.id, vacancy.theme, vacancy.author, vacancy.date FROM vacancy WHERE vacancy.date IN (SELECT MAX(vacancy.date) FROM vacancy);
#app.url = jdbc:sqlite:magnet.sqlite
#app.quantity = 9
#app.searchTableEntry = SELECT * FROM main.sqlite_master WHERE main.sqlite_master.tbl_name = 'entry'
#app.createTableEntry = CREATE TABLE entry (field integer)
#app.addField = INSERT INTO entry(field) VALUES (?)
#app.clearTableEntry = DELETE FROM entry
#app.getAllField = SELECT * FROM entry
#app.field = field
#app.entry = entry

#app.source = source.xml
#app.dest = dest.xml
#app.scheme = scheme.xsl
#app.href = href