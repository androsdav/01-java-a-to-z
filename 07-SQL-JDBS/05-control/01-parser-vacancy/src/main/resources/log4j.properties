# For the general syntax of property based configuration files see
# the documentation of org.apache.log4j.PropertyConfigurator.

# The root category uses two appenders: default.out and default.file.
# The first one gathers all log output, the latter only starting with
# the priority INFO.
# The root priority is DEBUG, so that all classes can be logged unless
# defined otherwise in more specific properties.

# Root logger option
log4j.rootLogger = debug, console, file

# Redirect log message to console
log4j.appender.console = org.apache.log4j.ConsoleAppender
log4j.appender.console.target = System.out
log4j.appender.console.layout = org.apache.log4j.PatternLayout
log4j.appender.console.layout.conversionPattern = \t[%p] %d{yyyy-MM-dd HH:mm:ss} %t %c{1}:%M:%L - %m%n
#%5p\t[%d] [%t] (%F:%L)\n     \t%m%n


# Redirect log messages to a log file, support file rolling
log4j.appender.file = org.apache.log4j.FileAppender
log4j.appender.file.file = sqlRu.log
log4j.appender.file.layout = org.apache.log4j.PatternLayout
log4j.appender.file.layout.conversionPattern = %d{yyyy-MM-dd HH:mm:ss} %5p %t %c{1}:%M:%L - %m%n

# Redirect log messages to a log debug-file, support file rolling
#log4j.appender.debugfile = org.apache.log4j.FileAppender
#log4j.appender.debugfile.file = sqlRu_debug.log
#log4j.appender.debugfile.layout = org.apache.log4j.PatternLayout
#log4j.appender.debugfile.layout.conversionPattern = %d{yyyy-MM-dd HH:mm:ss} %5p %t %c{1}:%M:%L - %m%n

#
#log4j.logger.com.my.app.somepackage = DEBUG, debugfile
#log4j.logger.com.my.app.somepackage.subpackage.ClassName = INFO